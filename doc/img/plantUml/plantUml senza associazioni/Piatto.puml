@startuml
class Piatto {
    + nome : string = ""
    + descrizione : string = ""
    - costo : float = 0
    - costoEco : float = 0
    - nutriScore : int = 0
    + listaIdIngredientiQuantita : List<OggettoQuantita<int>> = null
    - percentualeGuadagnoSulPiatto : int = 10
    + Piatto(nome:string, descrizione:string, listaIdIngredientiQuantita:List<OggettoQuantita<int>>)
    + Piatto()
    + Piatto(nomePiatto:string)
    + <<override>> Equals(obj:object) : bool
    + <<override>> ToString() : string
    + calcolaCosto(databaseIngredienti:List <Ingrediente>) : float
    + calcolaCostoEco(databaseIngredienti:List <Ingrediente>) : float
    + calcolaNutriScore(databaseIngredienti:List <Ingrediente>) : int
    + {static} checkPiattoOnonimoGiaPresente(nomePiatto:string, piattiConNomeSimileInDatabase:List<Piatto>) : Piatto
    - {static} getPiattiConNomeSimileInDatabase(nomePiatto:string, databasePiatti:List<Piatto>) : List<Piatto>
    - {static} getStringaStampaPiattiConNomeSimilePerSceltaUtente(nomePiatto:string, piattiConNomeSimileInDatabase:List<Piatto>) : string
    + {static} getListaIdIngredientiQuantitaPiattoFromUtente(nomePiatto:string, databaseIngredienti:List<Ingrediente>) : List<OggettoQuantita<int>>
    - {static} getNomeIngredientiFromUtente(nomePiatto:string) : List<string>
    - {static} nomeIngredientePresenteNelDatabase(nomeIngrediente:string, databaseIngredienti:List<Ingrediente>) : bool
    - {static} getIngredienteByNome(nomeIngrediente:string, databaseIngredienti:List<Ingrediente>) : Ingrediente
    - {static} getQuantitaIngredienteNelPiattoFromUtente(nomeIngrediente:string, nomePiatto:string) : int
    - getPatologieCompatibili(databaseIngredienti:List<Ingrediente>) : List<int>
    - getDietaMinimaCompatibile(databaseIngredienti:List<Ingrediente>) : int
    - getIngredientiPiatto(databaseIngredienti:List<Ingrediente>) : List<Ingrediente>
}
@enduml
